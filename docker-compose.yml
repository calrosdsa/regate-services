version: "2"

services:
  # zookeeper:
  #   image: docker.io/bitnami/zookeeper:3.8
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - "zookeeper_data:/bitnami"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data2:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      # - KAFKA_ENABLE_KRAFT=no
      # - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    # depends_on:
    #   - zookeeper
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: -Xms32M -Xmx256M
      SERVER_SERVLET_CONTEXTPATH: /

  postgres:
    image: postgis/postgis:latest
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  

volumes:
  zookeeper_data:
    driver: local
  kafka_data2:
    driver: local
  minio_data:
    driver: local